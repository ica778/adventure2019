image: nsumner/cmpt373:projectbase


stages:
  - build
  - analyze
  - test





build:
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_CXX_COMPILER=clang++ -DBUILD_ALL_TARGETS=NO -DCMAKE_EXPORT_COMPILE_COMMANDS=YES -fprofile-instr-generate -fcoverage-mapping ../
    - make
  artifacts:
    expire_in: 30 mins
    paths:
      - build/*


build-release:
  stage: build
  script:
    - mkdir build-release
    - cd build-release
    - cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_COMPILER=clang++ -DBUILD_ALL_TARGETS=YES ../
    - make
  artifacts:
    expire_in: 5 mins
    paths:
      - build-release/*
  allow_failure: true
  only:
    - master





cppcheck:
  stage: analyze
  script:
    - cppcheck --enable=all lib/* 2> build/cppcheck-results.txt
    - cat build/cppcheck-results.txt
  artifacts:
    expire_in: 3 hours
    paths:
      - build/cppcheck-results.txt
  allow_failure: true


clang-tidy:
  stage: analyze
  script:
    - cd build
    - >-
     /usr/lib/llvm-6.0/share/clang/run-clang-tidy.py
     -checks='*,-fuchsia-*,-google-readability-todo,-llvm-*,
     -google-runtime-references,-misc-unused-parameters,
     -google-readability-namespace-comments,
     -readability-else-after-return' '^(?!.*(googletest|test|networking|nlohmann)).*' > clang-tidy-results.txt
    - cat clang-tidy-results.txt
  artifacts:
    expire_in: 3 hours
    paths:
      - build/clang-tidy-results.txt
  allow_failure: true


headerdoc2html:
  stage: analyze
  script:
    - echo '...Debugging...'
    - ls
    - cd data/headerdoc-8.8.38/
#    - make
    - cd ../../
    - perl data/headerdoc-8.8.38/headerDoc2HTML.pl $(find lib -regex '.*\.h')
#    - bin/headerdoc2html -o doc/.HeaderDoc $(find lib -regex '.*\.h')
    - cd bin/
#    - ./headerdoc2html ../doc/.HeaderDoc $(find ../lib -regex '.*\.h')
    - ls
    - cd ../../
    - ls
    - cd
    - cd /usr/bin/
    - ls
    - cd ../
    - ls
  allow_failure: true


gatherheaderdoc:
  stage: analyze
  script:
    - find . -regex '.*\.h'
    - find lib -regex '.*\.h'
    - set -x
    - echo "sh bin/headerdoc2html doc/.HeaderDoc/ $(find lib -regex '.*\.h')"
    - set +x;
  allow_failure: true





test:
  stage: test
  script:
    - LLVM_PROFILE_FILE="runAllTests.profraw" build/bin/runAllTests
    - llvm-profdata merge -sparse runAllTests.profraw -o runAllTests.profdata
    - llvm-cov show build/bin/runAllTests -instr-profile=runAllTests.profdata -show-line-counts-or-regions -output-dir=coverage/ -format="html"
    - llvm-cov report build/bin/runAllTests -instr-profile=runAllTests.profdata
  coverage: '/TOTAL.*\s+(\S+\%)/'
  allow_failure: true
  artifacts:
    expire_in: 1 hour
    paths:
      - coverage/*
